// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: proto/manifest.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriggerEvent int32

const (
	TriggerEvent_TRIGGER_EVENT_NONE                       TriggerEvent = 0
	TriggerEvent_TRIGGER_EVENT_FIRESTORE_DOCUMENT_DELETED TriggerEvent = 1
)

// Enum value maps for TriggerEvent.
var (
	TriggerEvent_name = map[int32]string{
		0: "TRIGGER_EVENT_NONE",
		1: "TRIGGER_EVENT_FIRESTORE_DOCUMENT_DELETED",
	}
	TriggerEvent_value = map[string]int32{
		"TRIGGER_EVENT_NONE":                       0,
		"TRIGGER_EVENT_FIRESTORE_DOCUMENT_DELETED": 1,
	}
)

func (x TriggerEvent) Enum() *TriggerEvent {
	p := new(TriggerEvent)
	*p = x
	return p
}

func (x TriggerEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_manifest_proto_enumTypes[0].Descriptor()
}

func (TriggerEvent) Type() protoreflect.EnumType {
	return &file_proto_manifest_proto_enumTypes[0]
}

func (x TriggerEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerEvent.Descriptor instead.
func (TriggerEvent) EnumDescriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{0}
}

type Function struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []TriggerEvent         `protobuf:"varint,1,rep,packed,name=events,proto3,enum=infra.proto.TriggerEvent" json:"events,omitempty"`
	Database      string                 `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Function) Reset() {
	*x = Function{}
	mi := &file_proto_manifest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{0}
}

func (x *Function) GetEvents() []TriggerEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Function) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *Function) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_proto_manifest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{1}
}

func (x *Secret) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Cluster struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Deployment     string                 `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment,omitempty"`
	ServiceName    string                 `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceAccount string                 `protobuf:"bytes,4,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	Container      string                 `protobuf:"bytes,5,opt,name=container,proto3" json:"container,omitempty"`
	Label          string                 `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Replicas       int32                  `protobuf:"varint,7,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Port           int32                  `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_proto_manifest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{2}
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *Cluster) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Cluster) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *Cluster) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *Cluster) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Cluster) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *Cluster) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Run struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Secure        bool                   `protobuf:"varint,1,opt,name=secure,proto3" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Run) Reset() {
	*x = Run{}
	mi := &file_proto_manifest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{3}
}

func (x *Run) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

type Target struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Target:
	//
	//	*Target_Cluster
	//	*Target_Run
	Target        isTarget_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_proto_manifest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{4}
}

func (x *Target) GetTarget() isTarget_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Target) GetCluster() *Cluster {
	if x != nil {
		if x, ok := x.Target.(*Target_Cluster); ok {
			return x.Cluster
		}
	}
	return nil
}

func (x *Target) GetRun() *Run {
	if x != nil {
		if x, ok := x.Target.(*Target_Run); ok {
			return x.Run
		}
	}
	return nil
}

type isTarget_Target interface {
	isTarget_Target()
}

type Target_Cluster struct {
	Cluster *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3,oneof"`
}

type Target_Run struct {
	Run *Run `protobuf:"bytes,2,opt,name=run,proto3,oneof"`
}

func (*Target_Cluster) isTarget_Target() {}

func (*Target_Run) isTarget_Target() {}

type GrpcServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Definition    string                 `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	Internal      bool                   `protobuf:"varint,2,opt,name=internal,proto3" json:"internal,omitempty"`
	Target        *Target                `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Secrets       []*Secret              `protobuf:"bytes,4,rep,name=secrets,proto3" json:"secrets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcServer) Reset() {
	*x = GrpcServer{}
	mi := &file_proto_manifest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcServer) ProtoMessage() {}

func (x *GrpcServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcServer.ProtoReflect.Descriptor instead.
func (*GrpcServer) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{5}
}

func (x *GrpcServer) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *GrpcServer) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *GrpcServer) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GrpcServer) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedule      string                 `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_proto_manifest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{6}
}

func (x *Job) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

type HttpServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpServer) Reset() {
	*x = HttpServer{}
	mi := &file_proto_manifest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpServer) ProtoMessage() {}

func (x *HttpServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpServer.ProtoReflect.Descriptor instead.
func (*HttpServer) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{7}
}

type Auth struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ApiKey            string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	MessagingSenderId string                 `protobuf:"bytes,2,opt,name=messaging_sender_id,json=messagingSenderId,proto3" json:"messaging_sender_id,omitempty"`
	AppId             string                 `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	MeasurementId     string                 `protobuf:"bytes,4,opt,name=measurement_id,json=measurementId,proto3" json:"measurement_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_proto_manifest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{8}
}

func (x *Auth) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *Auth) GetMessagingSenderId() string {
	if x != nil {
		return x.MessagingSenderId
	}
	return ""
}

func (x *Auth) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Auth) GetMeasurementId() string {
	if x != nil {
		return x.MeasurementId
	}
	return ""
}

type Endpoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Domain        *KeyOrValue            `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoints) Reset() {
	*x = Endpoints{}
	mi := &file_proto_manifest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoints) ProtoMessage() {}

func (x *Endpoints) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoints.ProtoReflect.Descriptor instead.
func (*Endpoints) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{9}
}

func (x *Endpoints) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Endpoints) GetDomain() *KeyOrValue {
	if x != nil {
		return x.Domain
	}
	return nil
}

type WebApp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Auth          *Auth                  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebApp) Reset() {
	*x = WebApp{}
	mi := &file_proto_manifest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebApp) ProtoMessage() {}

func (x *WebApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebApp.ProtoReflect.Descriptor instead.
func (*WebApp) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{10}
}

func (x *WebApp) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type Model struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Model) Reset() {
	*x = Model{}
	mi := &file_proto_manifest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{11}
}

func (x *Model) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Model) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ModelServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Models        []*Model               `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModelServer) Reset() {
	*x = ModelServer{}
	mi := &file_proto_manifest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelServer) ProtoMessage() {}

func (x *ModelServer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelServer.ProtoReflect.Descriptor instead.
func (*ModelServer) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{12}
}

func (x *ModelServer) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ModelServer) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

type Component struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Namespace string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*Component_GrpcServer
	//	*Component_Endpoints
	//	*Component_Function
	//	*Component_Webapp
	//	*Component_HttpServer
	//	*Component_Job
	//	*Component_ModelServer
	Type          isComponent_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Component) Reset() {
	*x = Component{}
	mi := &file_proto_manifest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{13}
}

func (x *Component) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Component) GetType() isComponent_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Component) GetGrpcServer() *GrpcServer {
	if x != nil {
		if x, ok := x.Type.(*Component_GrpcServer); ok {
			return x.GrpcServer
		}
	}
	return nil
}

func (x *Component) GetEndpoints() *Endpoints {
	if x != nil {
		if x, ok := x.Type.(*Component_Endpoints); ok {
			return x.Endpoints
		}
	}
	return nil
}

func (x *Component) GetFunction() *Function {
	if x != nil {
		if x, ok := x.Type.(*Component_Function); ok {
			return x.Function
		}
	}
	return nil
}

func (x *Component) GetWebapp() *WebApp {
	if x != nil {
		if x, ok := x.Type.(*Component_Webapp); ok {
			return x.Webapp
		}
	}
	return nil
}

func (x *Component) GetHttpServer() *HttpServer {
	if x != nil {
		if x, ok := x.Type.(*Component_HttpServer); ok {
			return x.HttpServer
		}
	}
	return nil
}

func (x *Component) GetJob() *Job {
	if x != nil {
		if x, ok := x.Type.(*Component_Job); ok {
			return x.Job
		}
	}
	return nil
}

func (x *Component) GetModelServer() *ModelServer {
	if x != nil {
		if x, ok := x.Type.(*Component_ModelServer); ok {
			return x.ModelServer
		}
	}
	return nil
}

type isComponent_Type interface {
	isComponent_Type()
}

type Component_GrpcServer struct {
	GrpcServer *GrpcServer `protobuf:"bytes,3,opt,name=grpc_server,json=grpcServer,proto3,oneof"`
}

type Component_Endpoints struct {
	Endpoints *Endpoints `protobuf:"bytes,4,opt,name=endpoints,proto3,oneof"`
}

type Component_Function struct {
	Function *Function `protobuf:"bytes,5,opt,name=function,proto3,oneof"`
}

type Component_Webapp struct {
	Webapp *WebApp `protobuf:"bytes,6,opt,name=webapp,proto3,oneof"`
}

type Component_HttpServer struct {
	HttpServer *HttpServer `protobuf:"bytes,7,opt,name=http_server,json=httpServer,proto3,oneof"`
}

type Component_Job struct {
	Job *Job `protobuf:"bytes,8,opt,name=job,proto3,oneof"`
}

type Component_ModelServer struct {
	ModelServer *ModelServer `protobuf:"bytes,9,opt,name=model_server,json=modelServer,proto3,oneof"`
}

func (*Component_GrpcServer) isComponent_Type() {}

func (*Component_Endpoints) isComponent_Type() {}

func (*Component_Function) isComponent_Type() {}

func (*Component_Webapp) isComponent_Type() {}

func (*Component_HttpServer) isComponent_Type() {}

func (*Component_Job) isComponent_Type() {}

func (*Component_ModelServer) isComponent_Type() {}

type ListConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConfigItem) Reset() {
	*x = ListConfigItem{}
	mi := &file_proto_manifest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigItem) ProtoMessage() {}

func (x *ListConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigItem.ProtoReflect.Descriptor instead.
func (*ListConfigItem) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{14}
}

func (x *ListConfigItem) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type KeyConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyConfigItem) Reset() {
	*x = KeyConfigItem{}
	mi := &file_proto_manifest_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyConfigItem) ProtoMessage() {}

func (x *KeyConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyConfigItem.ProtoReflect.Descriptor instead.
func (*KeyConfigItem) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{15}
}

func (x *KeyConfigItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_proto_manifest_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{16}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConfigPlugin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Args          []*KeyValue            `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Imports       []string               `protobuf:"bytes,3,rep,name=imports,proto3" json:"imports,omitempty"`
	ManifestType  string                 `protobuf:"bytes,4,opt,name=manifest_type,json=manifestType,proto3" json:"manifest_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigPlugin) Reset() {
	*x = ConfigPlugin{}
	mi := &file_proto_manifest_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigPlugin) ProtoMessage() {}

func (x *ConfigPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigPlugin.ProtoReflect.Descriptor instead.
func (*ConfigPlugin) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigPlugin) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ConfigPlugin) GetArgs() []*KeyValue {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ConfigPlugin) GetImports() []string {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *ConfigPlugin) GetManifestType() string {
	if x != nil {
		return x.ManifestType
	}
	return ""
}

type ConfigPluginOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Imports       []string               `protobuf:"bytes,1,rep,name=imports,proto3" json:"imports,omitempty"`
	Init          []string               `protobuf:"bytes,2,rep,name=init,proto3" json:"init,omitempty"`
	Assignment    *KeyValue              `protobuf:"bytes,3,opt,name=assignment,proto3" json:"assignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigPluginOutput) Reset() {
	*x = ConfigPluginOutput{}
	mi := &file_proto_manifest_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigPluginOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigPluginOutput) ProtoMessage() {}

func (x *ConfigPluginOutput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigPluginOutput.ProtoReflect.Descriptor instead.
func (*ConfigPluginOutput) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigPluginOutput) GetImports() []string {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *ConfigPluginOutput) GetInit() []string {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *ConfigPluginOutput) GetAssignment() *KeyValue {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type ConfigItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*ConfigItem_IntValue
	//	*ConfigItem_ListValue
	//	*ConfigItem_KeyValue
	//	*ConfigItem_StringValue
	//	*ConfigItem_DoubleValue
	//	*ConfigItem_PluginValue
	Value         isConfigItem_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	mi := &file_proto_manifest_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{19}
}

func (x *ConfigItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigItem) GetValue() isConfigItem_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ConfigItem) GetIntValue() uint32 {
	if x != nil {
		if x, ok := x.Value.(*ConfigItem_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *ConfigItem) GetListValue() *ListConfigItem {
	if x != nil {
		if x, ok := x.Value.(*ConfigItem_ListValue); ok {
			return x.ListValue
		}
	}
	return nil
}

func (x *ConfigItem) GetKeyValue() *KeyConfigItem {
	if x != nil {
		if x, ok := x.Value.(*ConfigItem_KeyValue); ok {
			return x.KeyValue
		}
	}
	return nil
}

func (x *ConfigItem) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*ConfigItem_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *ConfigItem) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*ConfigItem_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *ConfigItem) GetPluginValue() *ConfigPlugin {
	if x != nil {
		if x, ok := x.Value.(*ConfigItem_PluginValue); ok {
			return x.PluginValue
		}
	}
	return nil
}

type isConfigItem_Value interface {
	isConfigItem_Value()
}

type ConfigItem_IntValue struct {
	IntValue uint32 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type ConfigItem_ListValue struct {
	ListValue *ListConfigItem `protobuf:"bytes,3,opt,name=list_value,json=listValue,proto3,oneof"`
}

type ConfigItem_KeyValue struct {
	KeyValue *KeyConfigItem `protobuf:"bytes,4,opt,name=key_value,json=keyValue,proto3,oneof"`
}

type ConfigItem_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ConfigItem_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,6,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type ConfigItem_PluginValue struct {
	PluginValue *ConfigPlugin `protobuf:"bytes,7,opt,name=plugin_value,json=pluginValue,proto3,oneof"`
}

func (*ConfigItem_IntValue) isConfigItem_Value() {}

func (*ConfigItem_ListValue) isConfigItem_Value() {}

func (*ConfigItem_KeyValue) isConfigItem_Value() {}

func (*ConfigItem_StringValue) isConfigItem_Value() {}

func (*ConfigItem_DoubleValue) isConfigItem_Value() {}

func (*ConfigItem_PluginValue) isConfigItem_Value() {}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ConfigItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_proto_manifest_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{20}
}

func (x *Config) GetItems() []*ConfigItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type Docstore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Docstore) Reset() {
	*x = Docstore{}
	mi := &file_proto_manifest_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Docstore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Docstore) ProtoMessage() {}

func (x *Docstore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Docstore.ProtoReflect.Descriptor instead.
func (*Docstore) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{21}
}

func (x *Docstore) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type Blockstore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Blockstore) Reset() {
	*x = Blockstore{}
	mi := &file_proto_manifest_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blockstore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blockstore) ProtoMessage() {}

func (x *Blockstore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blockstore.ProtoReflect.Descriptor instead.
func (*Blockstore) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{22}
}

type Chrome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chrome) Reset() {
	*x = Chrome{}
	mi := &file_proto_manifest_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chrome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chrome) ProtoMessage() {}

func (x *Chrome) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chrome.ProtoReflect.Descriptor instead.
func (*Chrome) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{23}
}

type GenerativeModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerativeModel) Reset() {
	*x = GenerativeModel{}
	mi := &file_proto_manifest_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerativeModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerativeModel) ProtoMessage() {}

func (x *GenerativeModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerativeModel.ProtoReflect.Descriptor instead.
func (*GenerativeModel) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{24}
}

func (x *GenerativeModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ElasticSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyType       string                 `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	FilterType    string                 `protobuf:"bytes,2,opt,name=filter_type,json=filterType,proto3" json:"filter_type,omitempty"`
	SortType      string                 `protobuf:"bytes,3,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticSignature) Reset() {
	*x = ElasticSignature{}
	mi := &file_proto_manifest_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticSignature) ProtoMessage() {}

func (x *ElasticSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticSignature.ProtoReflect.Descriptor instead.
func (*ElasticSignature) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{25}
}

func (x *ElasticSignature) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *ElasticSignature) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *ElasticSignature) GetSortType() string {
	if x != nil {
		return x.SortType
	}
	return ""
}

type Elastic struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Urls           []string               `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	UsernameEnvKey string                 `protobuf:"bytes,2,opt,name=username_env_key,json=usernameEnvKey,proto3" json:"username_env_key,omitempty"`
	PasswordEnvKey string                 `protobuf:"bytes,3,opt,name=password_env_key,json=passwordEnvKey,proto3" json:"password_env_key,omitempty"`
	Implementation string                 `protobuf:"bytes,4,opt,name=implementation,proto3" json:"implementation,omitempty"`
	Signature      *ElasticSignature      `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Elastic) Reset() {
	*x = Elastic{}
	mi := &file_proto_manifest_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Elastic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Elastic) ProtoMessage() {}

func (x *Elastic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Elastic.ProtoReflect.Descriptor instead.
func (*Elastic) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{26}
}

func (x *Elastic) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Elastic) GetUsernameEnvKey() string {
	if x != nil {
		return x.UsernameEnvKey
	}
	return ""
}

func (x *Elastic) GetPasswordEnvKey() string {
	if x != nil {
		return x.PasswordEnvKey
	}
	return ""
}

func (x *Elastic) GetImplementation() string {
	if x != nil {
		return x.Implementation
	}
	return ""
}

func (x *Elastic) GetSignature() *ElasticSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Pool struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	DocstoreDependencyName string                 `protobuf:"bytes,1,opt,name=docstore_dependency_name,json=docstoreDependencyName,proto3" json:"docstore_dependency_name,omitempty"`
	Collection             string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	LimitConfigName        string                 `protobuf:"bytes,3,opt,name=limit_config_name,json=limitConfigName,proto3" json:"limit_config_name,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Pool) Reset() {
	*x = Pool{}
	mi := &file_proto_manifest_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{27}
}

func (x *Pool) GetDocstoreDependencyName() string {
	if x != nil {
		return x.DocstoreDependencyName
	}
	return ""
}

func (x *Pool) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *Pool) GetLimitConfigName() string {
	if x != nil {
		return x.LimitConfigName
	}
	return ""
}

type GrpcClientFactory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Definition    string                 `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcClientFactory) Reset() {
	*x = GrpcClientFactory{}
	mi := &file_proto_manifest_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcClientFactory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcClientFactory) ProtoMessage() {}

func (x *GrpcClientFactory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcClientFactory.ProtoReflect.Descriptor instead.
func (*GrpcClientFactory) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{28}
}

func (x *GrpcClientFactory) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

type KeyOrValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Field:
	//
	//	*KeyOrValue_Key
	//	*KeyOrValue_Value
	Field         isKeyOrValue_Field `protobuf_oneof:"field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyOrValue) Reset() {
	*x = KeyOrValue{}
	mi := &file_proto_manifest_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyOrValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyOrValue) ProtoMessage() {}

func (x *KeyOrValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyOrValue.ProtoReflect.Descriptor instead.
func (*KeyOrValue) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{29}
}

func (x *KeyOrValue) GetField() isKeyOrValue_Field {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *KeyOrValue) GetKey() string {
	if x != nil {
		if x, ok := x.Field.(*KeyOrValue_Key); ok {
			return x.Key
		}
	}
	return ""
}

func (x *KeyOrValue) GetValue() string {
	if x != nil {
		if x, ok := x.Field.(*KeyOrValue_Value); ok {
			return x.Value
		}
	}
	return ""
}

type isKeyOrValue_Field interface {
	isKeyOrValue_Field()
}

type KeyOrValue_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type KeyOrValue_Value struct {
	Value string `protobuf:"bytes,2,opt,name=value,proto3,oneof"`
}

func (*KeyOrValue_Key) isKeyOrValue_Field() {}

func (*KeyOrValue_Value) isKeyOrValue_Field() {}

type GrpcClient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        *KeyOrValue            `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Definition    string                 `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	Secure        bool                   `protobuf:"varint,3,opt,name=secure,proto3" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcClient) Reset() {
	*x = GrpcClient{}
	mi := &file_proto_manifest_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcClient) ProtoMessage() {}

func (x *GrpcClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcClient.ProtoReflect.Descriptor instead.
func (*GrpcClient) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{30}
}

func (x *GrpcClient) GetDomain() *KeyOrValue {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *GrpcClient) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *GrpcClient) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

type HttpClient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Definition    string                 `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpClient) Reset() {
	*x = HttpClient{}
	mi := &file_proto_manifest_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpClient) ProtoMessage() {}

func (x *HttpClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpClient.ProtoReflect.Descriptor instead.
func (*HttpClient) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{31}
}

func (x *HttpClient) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *HttpClient) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpClient) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Database) Reset() {
	*x = Database{}
	mi := &file_proto_manifest_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Database) ProtoMessage() {}

func (x *Database) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Database.ProtoReflect.Descriptor instead.
func (*Database) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{32}
}

func (x *Database) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Ip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ip) Reset() {
	*x = Ip{}
	mi := &file_proto_manifest_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ip) ProtoMessage() {}

func (x *Ip) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ip.ProtoReflect.Descriptor instead.
func (*Ip) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{33}
}

type Import struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImportAs      string                 `protobuf:"bytes,1,opt,name=import_as,json=importAs,proto3" json:"import_as,omitempty"`
	ImportName    string                 `protobuf:"bytes,2,opt,name=import_name,json=importName,proto3" json:"import_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Import) Reset() {
	*x = Import{}
	mi := &file_proto_manifest_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Import) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Import) ProtoMessage() {}

func (x *Import) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Import.ProtoReflect.Descriptor instead.
func (*Import) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{34}
}

func (x *Import) GetImportAs() string {
	if x != nil {
		return x.ImportAs
	}
	return ""
}

func (x *Import) GetImportName() string {
	if x != nil {
		return x.ImportName
	}
	return ""
}

type ChanType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Imports       []*Import              `protobuf:"bytes,2,rep,name=imports,proto3" json:"imports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChanType) Reset() {
	*x = ChanType{}
	mi := &file_proto_manifest_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChanType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChanType) ProtoMessage() {}

func (x *ChanType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChanType.ProtoReflect.Descriptor instead.
func (*ChanType) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{35}
}

func (x *ChanType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChanType) GetImports() []*Import {
	if x != nil {
		return x.Imports
	}
	return nil
}

type Chan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          *KeyOrValue            `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Type          *ChanType              `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chan) Reset() {
	*x = Chan{}
	mi := &file_proto_manifest_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chan) ProtoMessage() {}

func (x *Chan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chan.ProtoReflect.Descriptor instead.
func (*Chan) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{36}
}

func (x *Chan) GetSize() *KeyOrValue {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *Chan) GetType() *ChanType {
	if x != nil {
		return x.Type
	}
	return nil
}

type Custom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImportInfo    *Import                `protobuf:"bytes,1,opt,name=import_info,json=importInfo,proto3" json:"import_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Custom) Reset() {
	*x = Custom{}
	mi := &file_proto_manifest_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Custom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Custom) ProtoMessage() {}

func (x *Custom) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Custom.ProtoReflect.Descriptor instead.
func (*Custom) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{37}
}

func (x *Custom) GetImportInfo() *Import {
	if x != nil {
		return x.ImportInfo
	}
	return nil
}

type RuntimeDependency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*RuntimeDependency_Docstore
	//	*RuntimeDependency_Blockstore
	//	*RuntimeDependency_Elastic
	//	*RuntimeDependency_Pool
	//	*RuntimeDependency_GrpcClientFactory
	//	*RuntimeDependency_GrpcClient
	//	*RuntimeDependency_HttpClient
	//	*RuntimeDependency_Chrome
	//	*RuntimeDependency_Database
	//	*RuntimeDependency_Ip
	//	*RuntimeDependency_Chan
	//	*RuntimeDependency_Custom
	//	*RuntimeDependency_GenerativeModel
	Value         isRuntimeDependency_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeDependency) Reset() {
	*x = RuntimeDependency{}
	mi := &file_proto_manifest_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeDependency) ProtoMessage() {}

func (x *RuntimeDependency) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeDependency.ProtoReflect.Descriptor instead.
func (*RuntimeDependency) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{38}
}

func (x *RuntimeDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeDependency) GetValue() isRuntimeDependency_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RuntimeDependency) GetDocstore() *Docstore {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Docstore); ok {
			return x.Docstore
		}
	}
	return nil
}

func (x *RuntimeDependency) GetBlockstore() *Blockstore {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Blockstore); ok {
			return x.Blockstore
		}
	}
	return nil
}

func (x *RuntimeDependency) GetElastic() *Elastic {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Elastic); ok {
			return x.Elastic
		}
	}
	return nil
}

func (x *RuntimeDependency) GetPool() *Pool {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Pool); ok {
			return x.Pool
		}
	}
	return nil
}

func (x *RuntimeDependency) GetGrpcClientFactory() *GrpcClientFactory {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_GrpcClientFactory); ok {
			return x.GrpcClientFactory
		}
	}
	return nil
}

func (x *RuntimeDependency) GetGrpcClient() *GrpcClient {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_GrpcClient); ok {
			return x.GrpcClient
		}
	}
	return nil
}

func (x *RuntimeDependency) GetHttpClient() *HttpClient {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_HttpClient); ok {
			return x.HttpClient
		}
	}
	return nil
}

func (x *RuntimeDependency) GetChrome() *Chrome {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Chrome); ok {
			return x.Chrome
		}
	}
	return nil
}

func (x *RuntimeDependency) GetDatabase() *Database {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Database); ok {
			return x.Database
		}
	}
	return nil
}

func (x *RuntimeDependency) GetIp() *Ip {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Ip); ok {
			return x.Ip
		}
	}
	return nil
}

func (x *RuntimeDependency) GetChan() *Chan {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Chan); ok {
			return x.Chan
		}
	}
	return nil
}

func (x *RuntimeDependency) GetCustom() *Custom {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

func (x *RuntimeDependency) GetGenerativeModel() *GenerativeModel {
	if x != nil {
		if x, ok := x.Value.(*RuntimeDependency_GenerativeModel); ok {
			return x.GenerativeModel
		}
	}
	return nil
}

type isRuntimeDependency_Value interface {
	isRuntimeDependency_Value()
}

type RuntimeDependency_Docstore struct {
	Docstore *Docstore `protobuf:"bytes,2,opt,name=docstore,proto3,oneof"`
}

type RuntimeDependency_Blockstore struct {
	Blockstore *Blockstore `protobuf:"bytes,3,opt,name=blockstore,proto3,oneof"`
}

type RuntimeDependency_Elastic struct {
	Elastic *Elastic `protobuf:"bytes,4,opt,name=elastic,proto3,oneof"`
}

type RuntimeDependency_Pool struct {
	Pool *Pool `protobuf:"bytes,5,opt,name=pool,proto3,oneof"`
}

type RuntimeDependency_GrpcClientFactory struct {
	GrpcClientFactory *GrpcClientFactory `protobuf:"bytes,6,opt,name=grpc_client_factory,json=grpcClientFactory,proto3,oneof"`
}

type RuntimeDependency_GrpcClient struct {
	GrpcClient *GrpcClient `protobuf:"bytes,7,opt,name=grpc_client,json=grpcClient,proto3,oneof"`
}

type RuntimeDependency_HttpClient struct {
	HttpClient *HttpClient `protobuf:"bytes,8,opt,name=http_client,json=httpClient,proto3,oneof"`
}

type RuntimeDependency_Chrome struct {
	Chrome *Chrome `protobuf:"bytes,9,opt,name=chrome,proto3,oneof"`
}

type RuntimeDependency_Database struct {
	Database *Database `protobuf:"bytes,10,opt,name=database,proto3,oneof"`
}

type RuntimeDependency_Ip struct {
	Ip *Ip `protobuf:"bytes,11,opt,name=ip,proto3,oneof"`
}

type RuntimeDependency_Chan struct {
	Chan *Chan `protobuf:"bytes,12,opt,name=chan,proto3,oneof"`
}

type RuntimeDependency_Custom struct {
	Custom *Custom `protobuf:"bytes,13,opt,name=custom,proto3,oneof"`
}

type RuntimeDependency_GenerativeModel struct {
	GenerativeModel *GenerativeModel `protobuf:"bytes,14,opt,name=generative_model,json=generativeModel,proto3,oneof"`
}

func (*RuntimeDependency_Docstore) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Blockstore) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Elastic) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Pool) isRuntimeDependency_Value() {}

func (*RuntimeDependency_GrpcClientFactory) isRuntimeDependency_Value() {}

func (*RuntimeDependency_GrpcClient) isRuntimeDependency_Value() {}

func (*RuntimeDependency_HttpClient) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Chrome) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Database) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Ip) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Chan) isRuntimeDependency_Value() {}

func (*RuntimeDependency_Custom) isRuntimeDependency_Value() {}

func (*RuntimeDependency_GenerativeModel) isRuntimeDependency_Value() {}

type RuntimeDependencies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*RuntimeDependency   `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeDependencies) Reset() {
	*x = RuntimeDependencies{}
	mi := &file_proto_manifest_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeDependencies) ProtoMessage() {}

func (x *RuntimeDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeDependencies.ProtoReflect.Descriptor instead.
func (*RuntimeDependencies) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{39}
}

func (x *RuntimeDependencies) GetItems() []*RuntimeDependency {
	if x != nil {
		return x.Items
	}
	return nil
}

type BuildDependencies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []string               `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildDependencies) Reset() {
	*x = BuildDependencies{}
	mi := &file_proto_manifest_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildDependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDependencies) ProtoMessage() {}

func (x *BuildDependencies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDependencies.ProtoReflect.Descriptor instead.
func (*BuildDependencies) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{40}
}

func (x *BuildDependencies) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type Manifest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Component           *Component             `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	Config              *Config                `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	RuntimeDependencies *RuntimeDependencies   `protobuf:"bytes,3,opt,name=runtime_dependencies,json=runtimeDependencies,proto3" json:"runtime_dependencies,omitempty"`
	BuildDependencies   *BuildDependencies     `protobuf:"bytes,4,opt,name=build_dependencies,json=buildDependencies,proto3" json:"build_dependencies,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	mi := &file_proto_manifest_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{41}
}

func (x *Manifest) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *Manifest) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Manifest) GetRuntimeDependencies() *RuntimeDependencies {
	if x != nil {
		return x.RuntimeDependencies
	}
	return nil
}

func (x *Manifest) GetBuildDependencies() *BuildDependencies {
	if x != nil {
		return x.BuildDependencies
	}
	return nil
}

type Root struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Repo          string                 `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	Services      []string               `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	Config        *Config                `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Root) Reset() {
	*x = Root{}
	mi := &file_proto_manifest_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Root) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root) ProtoMessage() {}

func (x *Root) ProtoReflect() protoreflect.Message {
	mi := &file_proto_manifest_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root.ProtoReflect.Descriptor instead.
func (*Root) Descriptor() ([]byte, []int) {
	return file_proto_manifest_proto_rawDescGZIP(), []int{42}
}

func (x *Root) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Root) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Root) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_proto_manifest_proto protoreflect.FileDescriptor

var file_proto_manifest_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e,
	0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xed,
	0x01, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x1d,
	0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x6a, 0x0a,
	0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x03, 0x72, 0x75, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x47, 0x72,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x22, 0x21, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x22, 0x8d, 0x01, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x50, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x22, 0x2f, 0x0a, 0x06, 0x57, 0x65, 0x62, 0x41, 0x70, 0x70, 0x12, 0x25, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x2b, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x66, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a,
	0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0xbe, 0x03, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x65, 0x62, 0x41, 0x70, 0x70, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65, 0x62, 0x61, 0x70,
	0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74,
	0x12, 0x35, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3e, 0x0a, 0x0c,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x26,
	0x0a, 0x08, 0x44, 0x6f, 0x63, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x22, 0x08, 0x0a, 0x06, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x22, 0x21,
	0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x6b, 0x0a, 0x10, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd6,
	0x01, 0x0a, 0x07, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x76, 0x4b,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c,
	0x12, 0x38, 0x0a, 0x18, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x0a, 0x4b,
	0x65, 0x79, 0x4f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x75,
	0x0a, 0x0a, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x22, 0x52, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x1e, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x04, 0x0a, 0x02, 0x49, 0x70, 0x22,
	0x46, 0x0a, 0x06, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x5e, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x6e, 0x12, 0x2b,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x4f, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x12, 0x34, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xef, 0x05, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x6f, 0x63, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x30, 0x0a, 0x07, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6f, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x50, 0x0a, 0x13, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x11, 0x67, 0x72, 0x70, 0x63,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3a, 0x0a,
	0x0b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x67,
	0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x70, 0x48, 0x00, 0x52, 0x02, 0x69, 0x70, 0x12, 0x27, 0x0a, 0x04,
	0x63, 0x68, 0x61, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x48, 0x00, 0x52,
	0x04, 0x63, 0x68, 0x61, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x12, 0x49, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x11, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x91, 0x02, 0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x53, 0x0a, 0x14, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x13, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x11, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2a, 0x54, 0x0a, 0x0c, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x2c, 0x0a, 0x28, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x70, 0x61, 0x6e, 0x74, 0x72, 0x79, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_proto_manifest_proto_rawDescOnce sync.Once
	file_proto_manifest_proto_rawDescData []byte
)

func file_proto_manifest_proto_rawDescGZIP() []byte {
	file_proto_manifest_proto_rawDescOnce.Do(func() {
		file_proto_manifest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_manifest_proto_rawDesc), len(file_proto_manifest_proto_rawDesc)))
	})
	return file_proto_manifest_proto_rawDescData
}

var file_proto_manifest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_manifest_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_proto_manifest_proto_goTypes = []any{
	(TriggerEvent)(0),           // 0: infra.proto.TriggerEvent
	(*Function)(nil),            // 1: infra.proto.Function
	(*Secret)(nil),              // 2: infra.proto.Secret
	(*Cluster)(nil),             // 3: infra.proto.Cluster
	(*Run)(nil),                 // 4: infra.proto.Run
	(*Target)(nil),              // 5: infra.proto.Target
	(*GrpcServer)(nil),          // 6: infra.proto.GrpcServer
	(*Job)(nil),                 // 7: infra.proto.Job
	(*HttpServer)(nil),          // 8: infra.proto.HttpServer
	(*Auth)(nil),                // 9: infra.proto.Auth
	(*Endpoints)(nil),           // 10: infra.proto.Endpoints
	(*WebApp)(nil),              // 11: infra.proto.WebApp
	(*Model)(nil),               // 12: infra.proto.Model
	(*ModelServer)(nil),         // 13: infra.proto.ModelServer
	(*Component)(nil),           // 14: infra.proto.Component
	(*ListConfigItem)(nil),      // 15: infra.proto.ListConfigItem
	(*KeyConfigItem)(nil),       // 16: infra.proto.KeyConfigItem
	(*KeyValue)(nil),            // 17: infra.proto.KeyValue
	(*ConfigPlugin)(nil),        // 18: infra.proto.ConfigPlugin
	(*ConfigPluginOutput)(nil),  // 19: infra.proto.ConfigPluginOutput
	(*ConfigItem)(nil),          // 20: infra.proto.ConfigItem
	(*Config)(nil),              // 21: infra.proto.Config
	(*Docstore)(nil),            // 22: infra.proto.Docstore
	(*Blockstore)(nil),          // 23: infra.proto.Blockstore
	(*Chrome)(nil),              // 24: infra.proto.Chrome
	(*GenerativeModel)(nil),     // 25: infra.proto.GenerativeModel
	(*ElasticSignature)(nil),    // 26: infra.proto.ElasticSignature
	(*Elastic)(nil),             // 27: infra.proto.Elastic
	(*Pool)(nil),                // 28: infra.proto.Pool
	(*GrpcClientFactory)(nil),   // 29: infra.proto.GrpcClientFactory
	(*KeyOrValue)(nil),          // 30: infra.proto.KeyOrValue
	(*GrpcClient)(nil),          // 31: infra.proto.GrpcClient
	(*HttpClient)(nil),          // 32: infra.proto.HttpClient
	(*Database)(nil),            // 33: infra.proto.Database
	(*Ip)(nil),                  // 34: infra.proto.Ip
	(*Import)(nil),              // 35: infra.proto.Import
	(*ChanType)(nil),            // 36: infra.proto.ChanType
	(*Chan)(nil),                // 37: infra.proto.Chan
	(*Custom)(nil),              // 38: infra.proto.Custom
	(*RuntimeDependency)(nil),   // 39: infra.proto.RuntimeDependency
	(*RuntimeDependencies)(nil), // 40: infra.proto.RuntimeDependencies
	(*BuildDependencies)(nil),   // 41: infra.proto.BuildDependencies
	(*Manifest)(nil),            // 42: infra.proto.Manifest
	(*Root)(nil),                // 43: infra.proto.Root
}
var file_proto_manifest_proto_depIdxs = []int32{
	0,  // 0: infra.proto.Function.events:type_name -> infra.proto.TriggerEvent
	3,  // 1: infra.proto.Target.cluster:type_name -> infra.proto.Cluster
	4,  // 2: infra.proto.Target.run:type_name -> infra.proto.Run
	5,  // 3: infra.proto.GrpcServer.target:type_name -> infra.proto.Target
	2,  // 4: infra.proto.GrpcServer.secrets:type_name -> infra.proto.Secret
	30, // 5: infra.proto.Endpoints.domain:type_name -> infra.proto.KeyOrValue
	9,  // 6: infra.proto.WebApp.auth:type_name -> infra.proto.Auth
	5,  // 7: infra.proto.ModelServer.target:type_name -> infra.proto.Target
	12, // 8: infra.proto.ModelServer.models:type_name -> infra.proto.Model
	6,  // 9: infra.proto.Component.grpc_server:type_name -> infra.proto.GrpcServer
	10, // 10: infra.proto.Component.endpoints:type_name -> infra.proto.Endpoints
	1,  // 11: infra.proto.Component.function:type_name -> infra.proto.Function
	11, // 12: infra.proto.Component.webapp:type_name -> infra.proto.WebApp
	8,  // 13: infra.proto.Component.http_server:type_name -> infra.proto.HttpServer
	7,  // 14: infra.proto.Component.job:type_name -> infra.proto.Job
	13, // 15: infra.proto.Component.model_server:type_name -> infra.proto.ModelServer
	17, // 16: infra.proto.ConfigPlugin.args:type_name -> infra.proto.KeyValue
	17, // 17: infra.proto.ConfigPluginOutput.assignment:type_name -> infra.proto.KeyValue
	15, // 18: infra.proto.ConfigItem.list_value:type_name -> infra.proto.ListConfigItem
	16, // 19: infra.proto.ConfigItem.key_value:type_name -> infra.proto.KeyConfigItem
	18, // 20: infra.proto.ConfigItem.plugin_value:type_name -> infra.proto.ConfigPlugin
	20, // 21: infra.proto.Config.items:type_name -> infra.proto.ConfigItem
	26, // 22: infra.proto.Elastic.signature:type_name -> infra.proto.ElasticSignature
	30, // 23: infra.proto.GrpcClient.domain:type_name -> infra.proto.KeyOrValue
	35, // 24: infra.proto.ChanType.imports:type_name -> infra.proto.Import
	30, // 25: infra.proto.Chan.size:type_name -> infra.proto.KeyOrValue
	36, // 26: infra.proto.Chan.type:type_name -> infra.proto.ChanType
	35, // 27: infra.proto.Custom.import_info:type_name -> infra.proto.Import
	22, // 28: infra.proto.RuntimeDependency.docstore:type_name -> infra.proto.Docstore
	23, // 29: infra.proto.RuntimeDependency.blockstore:type_name -> infra.proto.Blockstore
	27, // 30: infra.proto.RuntimeDependency.elastic:type_name -> infra.proto.Elastic
	28, // 31: infra.proto.RuntimeDependency.pool:type_name -> infra.proto.Pool
	29, // 32: infra.proto.RuntimeDependency.grpc_client_factory:type_name -> infra.proto.GrpcClientFactory
	31, // 33: infra.proto.RuntimeDependency.grpc_client:type_name -> infra.proto.GrpcClient
	32, // 34: infra.proto.RuntimeDependency.http_client:type_name -> infra.proto.HttpClient
	24, // 35: infra.proto.RuntimeDependency.chrome:type_name -> infra.proto.Chrome
	33, // 36: infra.proto.RuntimeDependency.database:type_name -> infra.proto.Database
	34, // 37: infra.proto.RuntimeDependency.ip:type_name -> infra.proto.Ip
	37, // 38: infra.proto.RuntimeDependency.chan:type_name -> infra.proto.Chan
	38, // 39: infra.proto.RuntimeDependency.custom:type_name -> infra.proto.Custom
	25, // 40: infra.proto.RuntimeDependency.generative_model:type_name -> infra.proto.GenerativeModel
	39, // 41: infra.proto.RuntimeDependencies.items:type_name -> infra.proto.RuntimeDependency
	14, // 42: infra.proto.Manifest.component:type_name -> infra.proto.Component
	21, // 43: infra.proto.Manifest.config:type_name -> infra.proto.Config
	40, // 44: infra.proto.Manifest.runtime_dependencies:type_name -> infra.proto.RuntimeDependencies
	41, // 45: infra.proto.Manifest.build_dependencies:type_name -> infra.proto.BuildDependencies
	21, // 46: infra.proto.Root.config:type_name -> infra.proto.Config
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_proto_manifest_proto_init() }
func file_proto_manifest_proto_init() {
	if File_proto_manifest_proto != nil {
		return
	}
	file_proto_manifest_proto_msgTypes[4].OneofWrappers = []any{
		(*Target_Cluster)(nil),
		(*Target_Run)(nil),
	}
	file_proto_manifest_proto_msgTypes[13].OneofWrappers = []any{
		(*Component_GrpcServer)(nil),
		(*Component_Endpoints)(nil),
		(*Component_Function)(nil),
		(*Component_Webapp)(nil),
		(*Component_HttpServer)(nil),
		(*Component_Job)(nil),
		(*Component_ModelServer)(nil),
	}
	file_proto_manifest_proto_msgTypes[19].OneofWrappers = []any{
		(*ConfigItem_IntValue)(nil),
		(*ConfigItem_ListValue)(nil),
		(*ConfigItem_KeyValue)(nil),
		(*ConfigItem_StringValue)(nil),
		(*ConfigItem_DoubleValue)(nil),
		(*ConfigItem_PluginValue)(nil),
	}
	file_proto_manifest_proto_msgTypes[29].OneofWrappers = []any{
		(*KeyOrValue_Key)(nil),
		(*KeyOrValue_Value)(nil),
	}
	file_proto_manifest_proto_msgTypes[38].OneofWrappers = []any{
		(*RuntimeDependency_Docstore)(nil),
		(*RuntimeDependency_Blockstore)(nil),
		(*RuntimeDependency_Elastic)(nil),
		(*RuntimeDependency_Pool)(nil),
		(*RuntimeDependency_GrpcClientFactory)(nil),
		(*RuntimeDependency_GrpcClient)(nil),
		(*RuntimeDependency_HttpClient)(nil),
		(*RuntimeDependency_Chrome)(nil),
		(*RuntimeDependency_Database)(nil),
		(*RuntimeDependency_Ip)(nil),
		(*RuntimeDependency_Chan)(nil),
		(*RuntimeDependency_Custom)(nil),
		(*RuntimeDependency_GenerativeModel)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_manifest_proto_rawDesc), len(file_proto_manifest_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_manifest_proto_goTypes,
		DependencyIndexes: file_proto_manifest_proto_depIdxs,
		EnumInfos:         file_proto_manifest_proto_enumTypes,
		MessageInfos:      file_proto_manifest_proto_msgTypes,
	}.Build()
	File_proto_manifest_proto = out.File
	file_proto_manifest_proto_goTypes = nil
	file_proto_manifest_proto_depIdxs = nil
}
